import globals from './globals';
import themeColors from './themeColors';

const button = {
  borderRadius: globals.borderRadius,
  fontSize: globals.fontSize,
  border: globals.border,
  margin: {
    blockTop: '0.5rem',
    dropDownToggleLeft: '0255rem',
  },
  padding: {
    sm: '0.25rem 0.5rem',
    lg: '0.5rem 1rem',
    default: '0.375rem 0.75rem',
    splitSmRight: '0.375rem',
    splitSmLeft: '0.375rem',
    splitLgRight: '0.75rem',
    splitLgLeft: '0.75rem',
    splitDefaultRight: '0.5625rem',
    splitDefaultLeft: '0.5625rem',
  },
  colors: {
    primary: {
      color: themeColors.white,
      colorOutline: themeColors.primary,
      colorOutlineHover: themeColors.white,
      backgroundColor: themeColors.primary,
      backgroundColorDisabled: themeColors.primary,
      backgroundColorHoverFocus: themeColors.primaryDarker,
      backgroundColorActive: themeColors.primaryDark,
      borderColor: themeColors.primary,
      borderColorDisabled: themeColors.primary,
      borderColorHoverFocus: themeColors.primaryDark,
      borderColorActive: themeColors.primaryDark,
      boxShadow: themeColors.primaryBoxShadow,
    },
    secondary: {
      color: themeColors.white,
      colorOutline: themeColors.secondary,
      colorOutlineHover: themeColors.white,
      backgroundColor: themeColors.secondary,
      backgroundColorDisabled: themeColors.secondary,
      backgroundColorHoverFocus: themeColors.secondaryDarker,
      backgroundColorActive: themeColors.secondary,
      borderColor: themeColors.secondary,
      borderColorDisabled: themeColors.secondary,
      borderColorHoverFocus: themeColors.secondaryDark,
      borderColorActive: themeColors.secondaryDark,
      boxShadow: themeColors.secondaryBoxShadow,
    },
    success: {
      color: themeColors.white,
      colorOutline: themeColors.success,
      colorOutlineHover: themeColors.white,
      backgroundColor: themeColors.success,
      backgroundColorDisabled: themeColors.success,
      backgroundColorHoverFocus: themeColors.successDarker,
      backgroundColorActive: themeColors.successDark,
      borderColor: themeColors.success,
      borderColorDisabled: themeColors.success,
      borderColorHoverFocus: themeColors.successDark,
      borderColorActive: themeColors.successDark,
      boxShadow: themeColors.successBoxShadow,
    },
    danger: {
      color: themeColors.white,
      colorOutline: themeColors.danger,
      colorOutlineHover: themeColors.white,
      backgroundColor: themeColors.danger,
      backgroundColorDisabled: themeColors.danger,
      backgroundColorHoverFocus: themeColors.dangerDarker,
      backgroundColorActive: themeColors.dangerDark,
      borderColor: themeColors.danger,
      borderColorDisabled: themeColors.danger,
      borderColorHoverFocus: themeColors.dangerDark,
      borderColorActive: themeColors.dangerDark,
      boxShadow: themeColors.dangerBoxShadow,
    },
    warning: {
      color: themeColors.darkerDarker,
      colorOutline: themeColors.warning,
      colorOutlineHover: themeColors.darkerDarker,
      backgroundColor: themeColors.warning,
      backgroundColorDisabled: themeColors.warning,
      backgroundColorHoverFocus: themeColors.warningDarker,
      backgroundColorActive: themeColors.warningDark,
      borderColor: themeColors.warning,
      borderColorDisabled: themeColors.warning,
      borderColorHoverFocus: themeColors.warningDark,
      borderColorActive: themeColors.warningDark,
      boxShadow: themeColors.warningBoxShadow,
    },
    info: {
      color: themeColors.white,
      colorOutline: themeColors.info,
      colorOutlineHover: themeColors.white,
      backgroundColor: themeColors.info,
      backgroundColorDisabled: themeColors.info,
      backgroundColorHoverFocus: themeColors.infoDarker,
      backgroundColorActive: themeColors.infoDark,
      borderColor: themeColors.info,
      borderColorDisabled: themeColors.info,
      borderColorHoverFocus: themeColors.infoDark,
      borderColorActive: themeColors.infoDark,
      boxShadow: themeColors.infoBoxShadow,
    },
    light: {
      color: themeColors.darkerDarker,
      colorOutline: themeColors.light,
      colorOutlineHover: themeColors.darkerDarker,
      backgroundColor: themeColors.light,
      backgroundColorDisabled: themeColors.light,
      backgroundColorHoverFocus: themeColors.lightDarker,
      backgroundColorActive: themeColors.lightDark,
      borderColor: themeColors.light,
      borderColorDisabled: themeColors.light,
      borderColorHoverFocus: themeColors.lightDark,
      borderColorActive: themeColors.lightDark,
      boxShadow: themeColors.lightBoxShadow,
      toggle: {
        color: themeColors.dark50Alpha,
        borderColor: themeColors.dark10Alpha,
        colorHoverFocus: themeColors.dark50Alpha,
        borderColorHoverFocus: themeColors.dark10Alpha,
      },
    },
    dark: {
      color: themeColors.white,
      colorOutline: themeColors.dark,
      colorOutlineHover: themeColors.white,
      backgroundColor: themeColors.dark,
      backgroundColorDisabled: themeColors.dark,
      backgroundColorHoverFocus: themeColors.darkDarker,
      backgroundColorActive: themeColors.darkDark,
      borderColor: themeColors.dark,
      borderColorDisabled: themeColors.dark,
      borderColorHoverFocus: themeColors.darkDark,
      borderColorActive: themeColors.darkDark,
      boxShadow: themeColors.darkBoxShadow,
      toggle: {
        color: themeColors.white50Alpha,
        borderColor: themeColors.white10Alpha,
        colorHoverFocus: themeColors.white50Alpha,
        borderColorHoverFocus: themeColors.white10Alpha,
      },
    },
    default: {
      color: themeColors.white,
      colorOutline: themeColors.secondary,
      colorOutlineHover: themeColors.white,
      backgroundColor: themeColors.secondary,
      backgroundColorDisabled: themeColors.secondary,
      backgroundColorHoverFocus: themeColors.secondaryDarker,
      backgroundColorActive: themeColors.secondary,
      borderColor: themeColors.secondary,
      borderColorDisabled: themeColors.secondary,
      borderColorHoverFocus: themeColors.secondaryDark,
      borderColorActive: themeColors.secondaryDark,
      boxShadow: themeColors.secondaryBoxShadow,
    },
  },
};

export default button;
